import pandas as pd########################### JUBILADOS# Carga los datos de jubilados.csv en un dataframe y pon como índice el nombrejubilados = pd.read_csv("jubilados.csv", index_col=(0), header = None)# Asigna nombre a las columnas del dataframe 'fecha_jubilacion', 'pension_pesos', 'fecha_consulta'jubilados.columns = ["fecha_jubilacion", "pension_pesos", "fecha_consulta"]# Carga los datos de udis.csv en una Serievalor_udis = pd.read_csv("udis.csv", squeeze = True, index_col=0, header = None)# Calcula la cantidad de UDIs que le corresponde a cada persona.jubilados["fecha_jubilacion"]jubilados["pension_pesos"] / valor_udis[ jubilados["fecha_jubilacion"] ].valuesjubilados["udis"] = jubilados["pension_pesos"] / valor_udis[ jubilados["fecha_jubilacion"] ].values# Calcula la cantidad de pesos que las persornas deberían recibir en la fecha de consulta.valor_udis[ jubilados["fecha_consulta"] ].valuesjubilados["a_recibir"] = jubilados["udis"]*valor_udis[ jubilados["fecha_consulta"] ].values# Seleciona las columnas "pension_pesos" y "a_recibir"jubilados[["pension_pesos", "a_recibir"]]# Grafica "pension_pesos" y "a_recibir"jubilados[["pension_pesos", "a_recibir"]].plot()# Seleciona "pension_pesos" y "a_recibir" de "BONIFACIO JUAREZ", "JEREMIAS ZAPATERO" con loc y ilocjubilados.loc[["BONIFACIO JUAREZ", "JEREMIAS ZAPATERO"] , ["pension_pesos", "a_recibir"] ]jubilados.iloc[-2: , [1,4]]# Ordena por UDIs y graficajubilados.sort_values(by = "udis", inplace = True)jubilados["udis"].plot()# Guarda el dataframe en un archivo csvjubilados.to_csv("nuevojubilados.csv", header = "False")